openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Messdatenportal des Hessisches Landesamt für Naturschutz, Umwelt und Geologie"
  description: "Luftmessnetzzentrale in Hessen (immissionskataster@hlnug.hessen.de)"
  contact:
    name: "Hessisches Landesamt für Naturschutz, Umwelt und Geologie"
    url: "www.hlnug.de"
    email: "immissionskataster@hlnug.hessen.de"

servers:
  - url: "https://app.hlnug.de/json"

tags:
  - name: api
  - name: Luft
  - name: Wasser
  - name: Radioaktivität

paths:
  /:
    get:
      responses:
        "200":
          description: OK

      summary: "API"
      description: "Übersicht über die Themen der API"
      tags:
        - api

  /lmw/getThemeStations/1:
    get:
      tags:
        - Luft
      responses:
        "200":
          description: OK
      summary: Luftmessnetz
      description: "Alle Stationen des Luftmessnetzes."

  /lmw/getThemeStations/4:
    get:
      tags:
        - Luft
      responses:
        "200":
          description: OK
      summary: Flughafen Frankfurt Luftdaten
      description: "Alle Stationen um den Flughafen Frankfurt."

  /lmw/getThemeStations/12:
    get:
      tags:
        - Luft
      responses:
        "200":
          description: OK
      summary: Ultrafeine Partikel
      description: "Alle Stationen die ultrafeine Partikel messen."

  /wasser/getThemeStations/6:
    get:
      responses:
        "200":
          description: OK
      tags:
        - Wasser
      summary: "Fließgewässer"
      description: "Alle Stationen in Fließgewässern."

  /grdw/getThemeStations/10:
    get:
      responses:
        "200":
          description: OK
      tags:
        - Wasser
      summary: "Grundwasserstände (DFÜ)"
      description: "Alle Stationen, die Grundwasserstände messen."

  /radio/getThemeStations/6:
    get:
      responses:
        "200":
          description: OK
      tags:
        - Radioaktivität

      summary: "Radioaktivität"
      description: "Alle Stationen, die Radioaktivität messen."

  /radio/getThemeStations/{stationId}:
    get:
      tags:
        - "Radioaktivität"
      summary: Get station data.
      description: "Information über eine Station, die Radioaktivität misst."
      responses:
        "200":
          description: OK
      parameters:
        - in: path
          name: stationId
          schema:
            type: integer
          required: true
          description: Numeric ID of the stadion
          example: 8

  /diskw/getStation/{stationId}:
    get:
      summary: Get station data.
      description: "Use any station ID to query for station information."
      responses:
        "200":
          description: OK
      parameters:
        - in: path
          name: stationId
          schema:
            type: integer
          required: true
          description: Numeric ID of the station
          example: 394

  /diskw/getStationLatestData/{stationId}/{standardparameter}:
    get:
      summary: Get station latest data.
      description: ""
      responses:
        "200":
          description: OK
      parameters:
        - in: path
          name: stationId
          schema:
            type: integer
          required: true
          description: Numeric ID of the station
          example: 394
        - in: path
          schema:
            type: array
            items:
              type: integer
          required: true
          name: standardparameter
          example: [110, 126, 138, 144]
